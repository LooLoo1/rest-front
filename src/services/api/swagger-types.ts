/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface components {
    schemas: {
        GrantedAuthority: {
            authority?: string;
        };
        User: {
            /** Format: int32 */
            id?: number;
            username?: string;
            email?: string;
            password?: string;
            accountNonLocked?: boolean;
            credentialsNonExpired?: boolean;
            accountNonExpired?: boolean;
            authorities?: components["schemas"]["GrantedAuthority"][];
            name?: string;
            enabled?: boolean;
        };
        RegisterRequest: {
            firstName?: string;
            lastName?: string;
            email?: string;
            password?: string;
        };
        AuthenticationResponse: {
            token?: string;
        };
        WatchListRequest: {
            /** Format: int32 */
            userId?: number;
            movieId?: string;
            /** @enum {string} */
            status?: "planned" | "watching" | "completed" | "dropped" | "favourite";
        };
        AuthenticationRequest: {
            email?: string;
            password?: string;
        };
        WatchList: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            userId?: number;
            movieId?: string;
            /** @enum {string} */
            status?: "planned" | "watching" | "completed" | "dropped" | "favourite";
            /** Format: date */
            createAt?: string;
        };
        MovieProfile: {
            title?: string;
            plot?: string;
            posterURL?: string;
            genre?: string;
            /** @enum {string} */
            status?: "planned" | "watching" | "completed" | "dropped" | "favourite";
        };
        UserProfileDTO: {
            username?: string;
            email?: string;
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            totalViewed?: number;
            /** Format: double */
            averageScore?: number;
            timeSpend?: string;
            list?: components["schemas"]["MovieProfile"][];
        };
        UserDTO: {
            /** Format: int32 */
            id?: number;
            username?: string;
            email?: string;
        };
        MovieDTO: {
            title?: string;
            id: string;
            posterURL?: string;
            plot?: string;
            genre?: string;
            /** Format: int32 */
            year?: number;
        };
        Movie: {
            imdbId?: string;
            title?: string;
            /** Format: int32 */
            year?: number;
            /** Format: date */
            released?: string;
            runtime?: string;
            director?: string;
            plot?: string;
            country?: string;
            poster?: string;
            ratingMetascore?: string;
            ratingRotTom?: string;
            ratingImdb?: string;
            type?: string;
            genre?: string;
        };
        MovieResponse: {
            imdbID?: string;
            Title?: string;
            Runtime?: string;
            /** Format: int32 */
            Year?: number;
            Released?: string;
            Genre?: string;
            Director?: string;
            Writer?: string;
            Plot?: string;
            Country?: string;
            Poster?: string;
            Ratings?: components["schemas"]["Rating"][];
            Metascore?: string;
            imdbRating?: string;
            imdbVotes?: string;
        };
        Rating: {
            Source?: string;
            Value?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}